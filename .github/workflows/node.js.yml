# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI/CD

on:
  push:
    branches: [ "main" ]

jobs:
  build:

    runs-on: self-hosted

    strategy:
      matrix:
        node-version: [18.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - name: Ensure runner has write permissions
      run: sudo chown -R $USER:$USER /home/ubuntu/app/actions-runner/_work/React-Redux-Login-Ecom-Project
    - uses: actions/checkout@v3
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: sudo npm ci --force
    - run: |
        touch .env
        echo "${{secrets.PROD_ENV_VAR}}" > .env
    - name: Install PM2
      run: sudo npm install -g pm2
    - name: Kill existing dev-app process
      run: |
        sudo pm2 save --force
        if sudo pm2 list | grep "dev-app"; then
          sudo pm2 stop dev-app
          sudo pm2 delete dev-app
          sudo pm2 save
        fi

    - name: Run npm run dev or dev-app with PM2
      run: sudo pm2 start npm --name "dev-app" -- run dev

    - name: Kill existing server-app process
      run: |
        cd server
        sudo pm2 save --force
        if sudo pm2 list | grep "server-app"; then
          sudo pm2 stop server-app
          sudo pm2 delete server-app
          sudo pm2 save
        fi

    - name: Run server.js or server-app with PM2
      run: |
        echo "Before displaying prevent working directory command test and running the servers"
        sudo pwd
        cd server
        sudo pm2 start node server.js --name "server-app"
    
    - name: Display PM2 list
      run: sudo pm2 list
